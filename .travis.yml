language: php

php: [5.5, 7.0, hhvm]

sudo: false

env:
  global:
    - TEST_SCOPE='code'

matrix:
  include:
  - php: 5.6
    env: |
      - SYMFONY_VERSION=2.7.*
  - php: 5.3.3
    env: |
      COMPOSER_FLAGS='--prefer-stable --prefer-lowest'
      PHPUNIT_COVERAGE='--coverage-text --coverage-clover=coverage.clover'
  - php: 5.4
    env: |
      TEST_SCOPE='javascript'
      SYMFONY_ENVIRONMENT='test'
      SYMFONY__ENABLE_ADDITIONALS='false'
    addons:
      firefox: "42.0"
  - php: 5.6
    env: |
      COMPOSER_FLAGS='--prefer-stable --prefer-lowest'
      TEST_SCOPE='javascript'
      SYMFONY_ENVIRONMENT='test'
      SYMFONY__ENABLE_ADDITIONALS='true'
    addons:
      firefox: "42.0"
  allow_failures:
  - { php: hhvm }
  - { php: 7.0 }

before_install:
  # Patch composer dependencies
  - sh -c 'if [ "${SYMFONY_VERSION}" != "" ]; then composer require --no-update symfony/symfony=${SYMFONY_VERSION}; fi;';

install:
  # Install composer dependencies
  - travis_retry composer update ${COMPOSER_FLAGS} --no-interaction --prefer-source;
  # Install npm deps
  - if [ "$TEST_SCOPE" = "code" ]; then travis_retry npm install grunt-cli; fi;
  - if [ "$TEST_SCOPE" = "code" ]; then travis_retry npm install; fi;
  # Setup behat dependencies when needed
  - if [ "$TEST_SCOPE" = "javascript" ]; then tests/bootstrap-functional.sh; fi;

script:
  # Run code tests
  - if [ "$TEST_SCOPE" = "code" ]; then vendor/bin/phpunit ${PHPUNIT_COVERAGE}; fi;
  - if [ "$TEST_SCOPE" = "code" ]; then node_modules/.bin/grunt test; fi;
  # Run functional/behat tests
  - if [ "$TEST_SCOPE" = "javascript" ]; then vendor/bin/behat --suite=javascript; fi;
  - if [ "$TEST_SCOPE" = "javascript" ]; then vendor/bin/behat --suite=server_side; fi;
  - if [ "$TEST_SCOPE" = "javascript" ] && [ "$SYMFONY__ENABLE_ADDITIONALS" = "true" ]; then vendor/bin/behat --suite=javascript_additionals; fi;

after_script:
  - if [ "$TEST_SCOPE" = "code" ] && [ "${PHPUNIT_COVERAGE}" != "" ]; then wget https://scrutinizer-ci.com/ocular.phar; fi;
  - if [ "$TEST_SCOPE" = "code" ] && [ "${PHPUNIT_COVERAGE}" != "" ]; then php ocular.phar code-coverage:upload --format=php-clover coverage.clover; fi;

after_failure:
  - if [ "$TEST_SCOPE" = "javascript" ]; then cat phpd.log; fi;
  - if [ "$TEST_SCOPE" = "javascript" ]; then cat selenium.log; fi;

cache:
  directories:
    - vendor
    - $HOME/.composer/cache
